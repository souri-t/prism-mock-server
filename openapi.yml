openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: サンプルユーザーAPI

servers:
  - url: http://localhost:4010
    description: ローカルモックサーバー

paths:
  /users:
    get:
      summary: ユーザー一覧の取得
      description: 登録されているすべてのユーザーを取得します
      operationId: getUsers
      responses:
        '200':
          description: ユーザー一覧の取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example:
                $ref: './examples/users-list.json'
    post:
      summary: ユーザーの新規作成
      description: 新しいユーザーを作成します（どのようなパラメータでも受け付けます）
      operationId: createUser
      responses:
        '201':
          description: ユーザー作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                $ref: './examples/user-created.json'
  
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: ユーザーID
        schema:
          type: integer
    get:
      summary: 特定のユーザーの取得
      description: 指定されたIDのユーザーを取得します
      operationId: getUserById
      responses:
        '200':
          description: ユーザー取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                $ref: './examples/user-detail.json'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                $ref: './examples/user-not-found.json'
    put:
      summary: ユーザー情報の更新
      description: 指定されたIDのユーザー情報を更新します（どのようなパラメータでも受け付けます）
      operationId: updateUser
      responses:
        '200':
          description: ユーザー更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                $ref: './examples/user-updated.json'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                $ref: './examples/user-not-found.json'
    delete:
      summary: ユーザーの削除
      description: 指定されたIDのユーザーを削除します
      operationId: deleteUser
      responses:
        '204':
          description: ユーザー削除成功
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                $ref: './examples/user-not-found.json'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          format: email
          description: メールアドレス
        age:
          type: integer
          description: 年齢
        createdAt:
          type: string
          format: date-time
          description: 作成日時
      required:
        - id
        - name
        - email
    
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message